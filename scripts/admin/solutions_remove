#!/usr/bin/env bash

set -Eeuo pipefail  # See the meaning in scripts/README.md
# set -x  # Print each command

#-----------------------------------------------------------------------------

# A workaround for a find problem when running bash under Microsoft Windows

find_to_run=find
true_find=/usr/bin/find

if [ -x "$true_find" ]
then
    find_to_run="$true_find"
fi

#-----------------------------------------------------------------------------

$find_to_run . -name '*.sv'  \
    | xargs -n 1 sed -i  \
    -e 's/[[:space:]]\+$//'  \
    -e 's/\t/    /g'  \
    -e '/START_SOLUTION/,/END_SOLUTION/d'

$find_to_run . -name '*.sv'  \
    | xargs -n 1 sed -i '/^$/N;/^\n$/D'

# See https://stackoverflow.com/questions/4521162/can-i-use-the-sed-command-to-replace-multiple-empty-line-with-one-empty-line/4522043#4522043
#
# Explanation:
#
#    /^$/N - match an empty line and append it to pattern space.
#
#    ; - command delimiter, allows multiple commands on one line,
#    can be used instead of separating commands into multiple -e clauses
#    for versions of sed that support it.
#
#    /^\n$/D - if the pattern space contains only a newline
#    in addition to the one at the end of the pattern space,
#    in other words a sequence of more than one newline,
#    then delete the first newline (more generally,
#    the beginning of pattern space up to and including
#    the first included newline)
